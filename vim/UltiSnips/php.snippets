snippet clss "Class" b
class ${1:ClassName}${2: extends ${3:ParentClass}}${4: implements ${5:Interface$6}}
{
$7
}
endsnippet

snippet abs "Abstract class" b
abstract class ${1:ClassName}${2: extends ${3:ParentClass}}${4: implements ${5:Interface$6}}
{
$7
}
endsnippet

snippet prop "protected property" b
protected $$1;
endsnippet

snippet prip "private property" b
private $$1;
endsnippet

snippet pubp "public property" b
public $$1;
endsnippet

snippet props "protected static property" b
protected static $$1;
endsnippet

snippet prips "private static property" b
private static $$1;
endsnippet

snippet pubps "public static property" b
public static $$1;
endsnippet

snippet prif "private function" b
private function ${1:functionName}()$3
endsnippet

snippet prof "protected function" b
protected function ${1:functionName}()$3
endsnippet

snippet pubf "public function" b
public function ${1:functionName}()$3
endsnippet

snippet pubfs "public static function" b
public static function ${1:functionName}()$3
endsnippet

snippet prifs "private static function" b
private static function ${1:functionName}()$3
endsnippet

snippet profs "protected static function" b
protected static function ${1:functionName}()$3
endsnippet

snippet inter "Interface" b
interface ${2:$3Interface}${4: implements ${5:$6Interface}}$7
{
$8
}
endsnippet

snippet doc "PHP doc" b
/**
 * $1
 */
endsnippet

snippet @v "@var" b
/* @var ${1:type} $${2:var} */
endsnippet

snippet pdoc "Property documentation" b
/**
 * @var ${1:type}
 */
endsnippet

snippet fdoc "Function documentation" b
/**
 * @param ${4:type} $${5:param}
 * 
 * @return ${1:null}
 * ${2:@throw $3Exception}
 */
endsnippet

snippet nam "Namespace" b
namespace ${1:Namespace};
endsnippet

snippet use "use statement" b
use ${1:Class};
endsnippet

snippet t "$this" b
$this->
endsnippet

snippet con "Constant" b
const ${1:CONST} = $2;
endsnippet

snippet dmp "var_dump" b
var_dump($$1);
endsnippet

snippet pr "print_r" b
print_r($$1);
endsnippet

snippet x "exit" b
exit($1);
endsnippet
