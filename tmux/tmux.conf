# vi:syntax=sh

set -g default-terminal "screen-256color"
set -g escape-time 1
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g allow-rename off
set-option -g history-limit 5000
set-window-option -g xterm-keys on

set-option -ga update-environment ' TMUX_BORDER_BG TMUX_BORDER_FG_ACTIVE TMUX_BORDER_FG TMUX_BORDER_FG_ACTIVE BACKGROUND BASE16-FLAVOR POWERLINE_CONFIG_OVERRIDES'

if-shell "[[ -n $SSH_CONNECTION ]]" '' 'unbind C-b; set -g prefix C-s'
#unbind C-b
#set -g prefix C-s

unbind Up
unbind Down
unbind Right
unbind Left
unbind c
unbind !

#bind Escape copy-mode
#setw -g mode-mouse on
set-option -g -q mouse on
#set -g status-fg colour255
#set -g status-bg colour160
#set -g pane-border-fg $TMUX_BORDER_FG
#set -g pane-border-bg $TMUX_BORDER_BG
if-shell "[[ -n $TMUX_BORDER_FG ]]" 'set -g pane-border-fg $TMUX_BORDER_FG' ''
if-shell "[[ -n $TMUX_BORDER_BG ]]" 'set -g pane-border-bg $TMUX_BORDER_BG' ''
if-shell "[[ -n $TMUX_BORDER_FG_ACTIVE ]]" 'set -g pane-active-border-fg $TMUX_BORDER_FG_ACTIVE' ''
if-shell "[[ -n $TMUX_BORDER_BG_ACTIVE ]]" 'set -g pane-active-border-bg $TMUX_BORDER_BG_ACTIVE' ''
#set -g pane-active-border-bg $TMUX_BORDER_BG_ACTIVE

bind @ break-pane

# act like vim
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
setw -g utf8 on

set -g status-interval 2

bind-key n new-window
bind-key -r s select-pane -t :.+

bind-key C-s send-prefix

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#bind g list-sessions
bind v copy-mode

#bind-key -r C-h select-window -t :-
#bind-key -r C-l select-window -t :+

# Resize
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r H resize-pane -L
bind-key -r L resize-pane -R
bind-key -r C-k resize-pane -U 5
bind-key -r C-j resize-pane -D 5
bind-key -r C-h resize-pane -L 5
bind-key -r C-l resize-pane -R 5

bind-key -r / swap-pane

bind-key Q confirm-before -p "Kill session #S? (y/n)" kill-session

bind-key -r p next-window
bind-key -r o previous-window
unbind-key r
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"
bind \ split-window -h
bind - split-window -v

#run-shell "powerline-daemon -q"
#source "$POWERLINE_PATH/bindings/tmux/powerline.conf"

#set-window-option -g window-style "bg=#0f0f0f"
#set-window-option -g window-active-style "bg=black"
#set-window-option -g window-style $TMUX_WINDOW_STYLE
#set-window-option -g window-active-style $TMUX_ACTIVE_WINDOW_STYLE
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
#set-window-option -g pane-active-border-style ''
#

set -g status-bg colour238
set-option -g message-command-style fg=black,bg=yellow
set-option -g message-style fg=yellow,bg=black

#set-option -gw mode-style fg=black,bg=blue
#
# @TODO: Find way to use output of ~/.dotfiles/tmux/window-status.zsh WITHOUT
# having it invoked all the time. Maybe an env variable?

#setw -g window-status-format "#[fg=white,bg=colour234] #{window_index} #[fg=black,bg=colour228]#{?window_activity_flag, * ,}#[fg=black,bg=colour243]   #{window_name}   #[bg=colour240] #{?window_zoomed_flag,z, } "
setw -g window-status-format "#[fg=white,bg=colour234] #{window_index} #[fg=black,bg=colour243]   #{window_name}   #[bg=colour240]#{?window_zoomed_flag, z , }#[default] "
setw -g window-status-current-format "#[fg=black,bg=colour3] #{window_index} #[fg=colour232,bold,bg=colour220]   #{window_name}   #[bg=colour228]#{?window_zoomed_flag, z , }#[default] "

setw -g window-status-activity-style bg=default,fg=default,blink
setw -g window-status-bell-style bg=default,fg=red,blink

setw -g status-left '#(~/.dotfiles/tmux/status-left.zsh)'

#setw -g status-left '#[bg=white,fg=colour232,bold]#{?client_prefix,, #{session_name}  }#[default]#[bg=colour35,blink,fg=white,bold]#{?client_prefix, #{session_name}  ,}#[bg=colour248]#{?client_prefix,, }#[bg=colour243]#{?client_prefix,, }#[bg=colour41]#{?client_prefix, ,}#[bg=colour47]#{?client_prefix, ,}#[default]  '

setw -g status-right '#[bg=colour88]#{?client_readonly, ,}#[bg=colour124]#{?client_readonly, ,}#[bg=red,bold,fg=white]#{?client_readonly, readonly ,}'

#setw -g window-status-current-attr dim
#setw -g window-status-attr reverse

set -g pane-active-border-fg colour3
#set -g pane-active-border-bg colour233
set -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on
set-option -g status-position top
set-option -g status-justify centre
set-window-option -g monitor-activity on
set-option -g visual-activity off
set-option -g visual-bell off

set -g clock-mode-colour colour3

set -g status-left-length 100
